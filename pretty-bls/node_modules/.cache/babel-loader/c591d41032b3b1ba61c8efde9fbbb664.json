{"ast":null,"code":"import _classCallCheck from \"/home/ken/dev/projects/pretty-bls/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/ken/dev/projects/pretty-bls/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/ken/dev/projects/pretty-bls/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/ken/dev/projects/pretty-bls/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/ken/dev/projects/pretty-bls/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/ken/dev/projects/pretty-bls/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/ken/dev/projects/pretty-bls/src/DataProvider.js\";\nimport React, { Component, createContext } from 'react';\nimport axios from \"axios\";\n\nvar _createContext = createContext(),\n    Consumer = _createContext.Consumer,\n    Provider = _createContext.Provider; //set initial state\n\n\nexport { Consumer, Provider };\nvar initialState = {\n  seriesID: \"\",\n  data: [],\n  loading: true,\n  errMsg: null // const url = \"https://api.bls.gov/publicAPI/v2/timeseries/data/\"\n\n};\nvar url = \"https://swapi.co/api/people/\";\nvar seriesID = \"LNS14000000\"; //placeholder until I get buttons working\n\nvar DataProvider =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(DataProvider, _Component);\n\n  function DataProvider() {\n    var _this;\n\n    _classCallCheck(this, DataProvider);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DataProvider).call(this));\n    _this.state = initialState; //bind prototype functions\n\n    _this.resetState = _this.resetState.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getData = _this.getData.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  } //need to revert state upon each button click\n\n\n  _createClass(DataProvider, [{\n    key: \"resetState\",\n    value: function resetState() {\n      this.setState(initialState);\n    }\n  }, {\n    key: \"getData\",\n    value: function getData(seriesID) {\n      var _this2 = this;\n\n      this.resetState(); //placeholder for now until working, will switch out for seriesID once running\n\n      var id = this.seriesID;\n      return axios.get(url).then(function (response) {\n        return _this2.setState({\n          data: response.data.Results.series[0].data,\n          loading: false,\n          errMsg: false\n        });\n      }).catch(function (errMsg) {\n        return _this2.setState({\n          loading: false,\n          errMsg: \"Cannot get data\"\n        });\n      });\n    }\n  }, {\n    key: \"handleClick\",\n    value: function handleClick() {\n      this.getData();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log(JSON.stringify(this.state.data));\n      return React.createElement(Provider, {\n        value: chart,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"Data Provider Test\", this.props.children);\n    }\n  }]);\n\n  return DataProvider;\n}(Component);\n\nexport { DataProvider as default };","map":{"version":3,"sources":["/home/ken/dev/projects/pretty-bls/src/DataProvider.js"],"names":["React","Component","createContext","axios","Consumer","Provider","initialState","seriesID","data","loading","errMsg","url","DataProvider","state","resetState","bind","getData","setState","id","get","then","response","Results","series","catch","console","log","JSON","stringify","chart","props","children"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,aAA3B,QAAgD,OAAhD;AACA,OAAOC,KAAP,MAAkB,OAAlB;;qBAEoCD,aAAa,E;IAAnCE,Q,kBAAAA,Q;IAAUC,Q,kBAAAA,Q,EAExB;;;;AACA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,QAAQ,EAAC,EADQ;AAEjBC,EAAAA,IAAI,EAAC,EAFY;AAGjBC,EAAAA,OAAO,EAAE,IAHQ;AAIjBC,EAAAA,MAAM,EAAE,IAJS,CAOrB;;AAPqB,CAArB;AAQA,IAAMC,GAAG,GAAG,8BAAZ;AACA,IAAMJ,QAAQ,GAAG,aAAjB,C,CAA+B;;IAGVK,Y;;;;;AACjB,0BAAa;AAAA;;AAAA;;AACT;AACA,UAAKC,KAAL,GAAaP,YAAb,CAFS,CAIT;;AACA,UAAKQ,UAAL,GAAkB,MAAKA,UAAL,CAAgBC,IAAhB,uDAAlB;AACA,UAAKC,OAAL,GAAe,MAAKA,OAAL,CAAaD,IAAb,uDAAf;AANS;AAOZ,G,CAED;;;;;iCACY;AACR,WAAKE,QAAL,CAAcX,YAAd;AACH;;;4BAEOC,Q,EAAS;AAAA;;AACb,WAAKO,UAAL,GADa,CAEb;;AACA,UAAII,EAAE,GAAG,KAAKX,QAAd;AACA,aAAOJ,KAAK,CAACgB,GAAN,CAAUR,GAAV,EACFS,IADE,CACI,UAAAC,QAAQ;AAAA,eACX,MAAI,CAACJ,QAAL,CAAc;AACVT,UAAAA,IAAI,EAAEa,QAAQ,CAACb,IAAT,CAAcc,OAAd,CAAsBC,MAAtB,CAA6B,CAA7B,EAAgCf,IAD5B;AAEVC,UAAAA,OAAO,EAAE,KAFC;AAGVC,UAAAA,MAAM,EAAE;AAHE,SAAd,CADW;AAAA,OADZ,EAOFc,KAPE,CAOK,UAAAd,MAAM;AAAA,eACV,MAAI,CAACO,QAAL,CAAc;AACXR,UAAAA,OAAO,EAAC,KADG;AAEXC,UAAAA,MAAM,EAAC;AAFI,SAAd,CADU;AAAA,OAPX,CAAP;AAYH;;;kCAEY;AACT,WAAKM,OAAL;AACH;;;6BAEQ;AAELS,MAAAA,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACC,SAAL,CAAe,KAAKf,KAAL,CAAWL,IAA1B,CAAZ;AACA,aACI,oBAAC,QAAD;AAAU,QAAA,KAAK,EAAEqB,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAEK,KAAKC,KAAL,CAAWC,QAFhB,CADJ;AAMH;;;;EA9CqC9B,S;;SAArBW,Y","sourcesContent":["import React, { Component, createContext } from 'react'\nimport axios from \"axios\"\n\nexport const {Consumer, Provider} = createContext()\n\n//set initial state\nconst initialState = {\n    seriesID:\"\",\n    data:[],\n    loading: true,\n    errMsg: null\n}\n\n// const url = \"https://api.bls.gov/publicAPI/v2/timeseries/data/\"\nconst url = \"https://swapi.co/api/people/\"\nconst seriesID = \"LNS14000000\" //placeholder until I get buttons working\n\n\nexport default class DataProvider extends Component {\n    constructor(){\n        super();\n        this.state = initialState\n\n        //bind prototype functions\n        this.resetState = this.resetState.bind(this)\n        this.getData = this.getData.bind(this)\n    }\n\n    //need to revert state upon each button click\n    resetState(){\n        this.setState(initialState)\n    }\n\n    getData(seriesID){\n        this.resetState();\n        //placeholder for now until working, will switch out for seriesID once running\n        let id = this.seriesID\n        return axios.get(url)\n            .then( response => \n                this.setState({\n                    data: response.data.Results.series[0].data,\n                    loading: false,\n                    errMsg: false\n                }))\n            .catch( errMsg => \n                this.setState({\n                   loading:false,\n                   errMsg:\"Cannot get data\"     \n            }))\n    }\n\n    handleClick(){\n        this.getData()\n    }\n\n    render() {\n        \n        console.log(JSON.stringify(this.state.data))\n        return (\n            <Provider value={chart}>\n                Data Provider Test\n                {this.props.children}\n            </Provider>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}